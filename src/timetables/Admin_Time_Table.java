/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetables;

import java.sql.*;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Be First
 */
public class Admin_Time_Table extends javax.swing.JFrame {

    
    private SimpleDateFormat sdf = new SimpleDateFormat("yyy-MM-dd");
    
    private int maxID;
    private int calId;

    public Admin_Time_Table() {
        initComponents();
        setSOC_TimeTableData();
        fillCombModuleCode();
        getMaxIndex();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDate = new com.toedter.calendar.JDateChooser();
        combCode = new javax.swing.JComboBox<>();
        combBatch = new javax.swing.JComboBox<>();
        txtName = new javax.swing.JTextField();
        combLecturer = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        combSTime = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combETime = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        combFaculty = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        combLectureHall = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SOC_TimeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("StartTime");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Batch");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Date");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setText("Module Code");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setText("Module Name");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setText("Module Lecturer");

        combCode.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        combBatch.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        combBatch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "19.1", "19.2", "20.1", "20.2" }));
        combBatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combBatchActionPerformed(evt);
            }
        });

        txtName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        combLecturer.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        combLecturer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dr.Rasika Ranaweera", "Mr.Chaminda Rathnayake", "Ms.Nethmi", "Mr.Pramudya Thilakarathne" }));

        jPanel3.setLayout(new java.awt.GridLayout(1, 4, 10, 0));

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);

        combSTime.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        combSTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" }));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setText("EndTime");

        combETime.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        combETime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" }));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("Faculty");

        combFaculty.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        combFaculty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SOC", "SOB", "SOE" }));
        combFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combFacultyActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel9.setText("Lecture Hall");

        combLectureHall.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        combLectureHall.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "L1002", "L2001", "L3004" }));
        combLectureHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combLectureHallActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Time Table Management System");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/timetables/back.png"))); // NOI18N
        jButton4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 51), 1, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(combLectureHall, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combFaculty, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combLecturer, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combCode, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combBatch, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combSTime, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combETime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel10)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combBatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(combFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(combLectureHall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(combCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(combLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combSTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combETime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SOC_TimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ));
        SOC_TimeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SOC_TimeTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(SOC_TimeTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void combBatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combBatchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combBatchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        maxID = maxID + 1;
        String batch = combBatch.getSelectedItem().toString();
        String faculty = combFaculty.getSelectedItem().toString();
        String lectureHall = combLectureHall.getSelectedItem().toString();
        String date = sdf.format(txtDate.getDate());
        String moduleName = txtName.getText();
        String moduleCode = combCode.getSelectedItem().toString();
        String moduleLecturer = combLecturer.getSelectedItem().toString();
        String sTime = combSTime.getSelectedItem().toString();
        String eTime = combETime.getSelectedItem().toString();
        int id = maxID;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(info.DBInfo.DBUrl, info.DBInfo.DBUsername, info.DBInfo.DBPassword);
            Statement smt = conn.createStatement();
            smt.execute("insert into timetable(id,batch,faculty,lecture_hall,date,module_code,module_name,module_lecturer,start_time,end_time) values('" + id + "','" + batch + "','" + faculty + "','" + lectureHall + "','" + date + "','" + moduleCode + "','" + moduleName + "','" + moduleLecturer + "','" + sTime + "','" + eTime + "')");
            JOptionPane.showConfirmDialog(this, "Record Submited");
            smt.close();
            setSOC_TimeTableData();
            resetData();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void SOC_TimeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SOC_TimeTableMouseClicked
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(info.DBInfo.DBUrl, info.DBInfo.DBUsername, info.DBInfo.DBPassword);
            calId = Integer.parseInt(SOC_TimeTable.getValueAt(SOC_TimeTable.getSelectedRow(), 0).toString());
            Statement smt = conn.createStatement();
            ResultSet rs = smt.executeQuery("select * from timetable where ID=" + calId + "");
            if (rs.next()) {
                combBatch.setSelectedItem(rs.getString(2));
                combFaculty.setSelectedItem(rs.getString(3));
                combLectureHall.setSelectedItem(rs.getString(4));
                txtDate.setDate(rs.getDate(5));
                txtName.setText(rs.getString(7));
                combCode.setSelectedItem(rs.getString(6));
                combLecturer.setSelectedItem(rs.getString(8));
                combSTime.setSelectedItem(rs.getString(9));
                combETime.setSelectedItem(rs.getString(10));
            }
            rs.close();
            smt.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_SOC_TimeTableMouseClicked

    private void combFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combFacultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combFacultyActionPerformed

    private void combLectureHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combLectureHallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combLectureHallActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (calId != 0) {
            String batch = combBatch.getSelectedItem().toString();
            String faculty = combFaculty.getSelectedItem().toString();
            String lectureHall = combLectureHall.getSelectedItem().toString();
            String date = sdf.format(txtDate.getDate());
            String moduleName = txtName.getText();
            String moduleCode = combCode.getSelectedItem().toString();
            String moduleLecturer = combLecturer.getSelectedItem().toString();
            String sTime = combSTime.getSelectedItem().toString();
            String eTime = combETime.getSelectedItem().toString();

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(info.DBInfo.DBUrl, info.DBInfo.DBUsername, info.DBInfo.DBPassword);
                Statement smt = conn.createStatement();
                smt.execute("update timetable set batch='" + batch + "',faculty='" + faculty + "',lecture_hall='" + lectureHall + "',date='" + date + "',module_code='" + moduleCode + "',module_name='" + moduleName + "',module_lecturer='" + moduleLecturer + "',start_time='" + sTime + "',end_time='" + eTime + "' where id=" + calId);
                JOptionPane.showMessageDialog(this, "Record Updated");
                setSOC_TimeTableData();
                resetData();
                calId = 0;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can not update record");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (calId != 0) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(info.DBInfo.DBUrl, info.DBInfo.DBUsername, info.DBInfo.DBPassword);
                Statement smt = conn.createStatement();
                smt.execute("delete from timetable where id=" + calId);
                JOptionPane.showMessageDialog(this, "Record deleted");
                setSOC_TimeTableData();
                resetData();
                calId = 0;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Can not delete record");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Time_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Time_Table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SOC_TimeTable;
    private javax.swing.JComboBox<String> combBatch;
    private javax.swing.JComboBox<String> combCode;
    private javax.swing.JComboBox<String> combETime;
    private javax.swing.JComboBox<String> combFaculty;
    private javax.swing.JComboBox<String> combLectureHall;
    private javax.swing.JComboBox<String> combLecturer;
    private javax.swing.JComboBox<String> combSTime;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void setSOC_TimeTableData() {

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(info.DBInfo.DBUrl, info.DBInfo.DBUsername, info.DBInfo.DBPassword);
            int rows = 0;
            int rowIndex = 0;

            Statement smt = conn.createStatement();
            ResultSet rs = smt.executeQuery("select * from timetable order by faculty desc");
            if (rs.next()) {
                rs.last();
                rows = rs.getRow();
                rs.beforeFirst();
            }
            String[][] data = new String[rows][10];
            while (rs.next()) {

                data[rowIndex][0] = rs.getString(1);
                data[rowIndex][1] = rs.getString(2);
                data[rowIndex][2] = rs.getString(3);
                data[rowIndex][3] = rs.getString(4);
                data[rowIndex][4] = rs.getString(5);
                data[rowIndex][5] = rs.getString(6);
                data[rowIndex][6] = rs.getString(7);
                data[rowIndex][7] = rs.getString(8);
                data[rowIndex][8] = rs.getString(9);
                data[rowIndex][9] = rs.getString(10);

                rowIndex++;

            }
            String[] cols = {"ID", "Batch", "Faculty", "Lecture Hall", "Date", "Module Code", "Module Name", "Module Lecturer", "Start Time", "End Time"};
            DefaultTableModel model = new DefaultTableModel(data, cols);
            SOC_TimeTable.setModel(model);

            rs.close();
            smt.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Can't Retrive Data");
        }

    }

    private void resetData() {
        txtName.setText("");
    }

    private void fillCombModuleCode() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(info.DBInfo.DBUrl, info.DBInfo.DBUsername, info.DBInfo.DBPassword);
            Statement smt = conn.createStatement();
            ResultSet rs = smt.executeQuery("select * from Module");
            while (rs.next()) {
                String code = rs.getString("ModuleCode");
                combCode.addItem(code);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }

    private void getMaxIndex() {
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(info.DBInfo.DBUrl, info.DBInfo.DBUsername, info.DBInfo.DBPassword);
            Statement smt = conn.createStatement();
            ResultSet rs = smt.executeQuery("select max(id) from timetable");
            rs.next();
            maxID= rs.getInt(1);
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }

}
